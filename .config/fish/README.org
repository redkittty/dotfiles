#+title: Fish Shell Config
#+PROPERTY: header-args :tangle config.fish

* Table of Contents :toc:
- [[#about-this-config][About this Config]]
- [[#path][Path]]
- [[#general][General]]
- [[#colors][Colors]]
- [[#functions][Functions]]
  - [[#backup][Backup]]
  - [[#extract][Extract]]
- [[#aliases][Aliases]]
  - [[#general-aliases][General Aliases]]
  - [[#pacman][Pacman]]
  - [[#aur-helpers][Aur Helpers]]
  - [[#text-editors][Text Editors]]
  - [[#coderust][Code/Rust]]
- [[#colorscript][Colorscript]]
- [[#prompt][Prompt]]

* About this Config
This is my personal fish config.

Fish is a Friendly interactive shell with Modern Features like Syntax Highlighting and Tab Complete

This Config is made for my wants and needs

* Path
This is the path, any executables placed in the PATH can be executabled by just typing it's name

#+begin_src fish
#!/bin/fish
set -e fish_user_paths
set -U fish_user_paths $HOME/.local/bin $HOME/.config/emacs/bin /var/lib/flatpak/app $fish_user_paths
#+end_src

* General
These are some General changes I made to my config

This area does things like set EDITOR, set Manpager, disables intro message, etc

#+begin_src fish
set fish_greeting                                 # Supresses fish's intro message
set TERM "xterm-256color"                         # Sets the terminal type
set EDITOR "emacsclient -nw        "              # $EDITOR use Emacs in terminal
set VISUAL "emacsclient -c -a emacs"              # $VISUAL use Emacs in GUI mode

### "nvim" as manpager ###
set -x MANPAGER "nvim +Man!"

### Vi-Keybindings ###
fish_vi_key_bindings
#+end_src

* Colors
This area describes Colors for Autocomplete and Syntax Highlighting.
#+begin_src fish
set fish_color_normal gray
set fish_color_autosuggestion '545454'
set fish_color_command green
set fish_color_error 'fc0000'
set fish_color_param gray
#+end_src

* Functions
This area describes different functions for the shell.

** Backup
Function for creating a backup file

ex: backup file.txt

result: copies file as file.txt.bak

#+begin_src fish
function backup --argument filename
    cp $filename $filename.bak
end
#+end_src

** Extract
This function extracts an archive file.

ex: ex discord.zip

result: makes a folder called discord

#+begin_src fish
function ex
    if [ -z "$argv" ]
        # Display usage if no parameters given
        echo "Usage: ex <path/file_name>.<zip|rar|bz2|gz|tar|tbz2|tgz|Z|7z|xz|ex|tar.bz2|tar.gz|tar.xz>"
        echo "       extract <path/file_name_1.ext> [path/file_name_2.ext] [path/file_name_3.ext]"
    else
        for n in $argv
            if test -f "$n"
                switch "$n"
                    case '*.cbt' '*.tar.bz2' '*.tar.gz' '*.tar.xz' '*.tbz2' '*.tgz' '*.txz' '*.tar'
                        tar xvf "$n"
                    case '*.lzma'
                        unlzma ./"$n"
                    case '*.bz2'
                        bunzip2 ./"$n"
                    case '*.cbr' '*.rar'
                        unrar x -ad ./"$n"
                    case '*.gz'
                        gunzip ./"$n"
                    case '*.cbz' '*.epub' '*.zip'
                        unzip ./"$n"
                    case '*.z'
                        uncompress ./"$n"
                    case '*.7z' '*.arj' '*.cab' '*.cb7' '*.chm' '*.deb' '*.dmg' '*.iso' '*.lzh' '*.msi' '*.pkg' '*.rpm' '*.udf' '*.wim' '*.xar'
                        7z x ./"$n"
                    case '*.xz'
                        unxz ./"$n"
                    case '*.exe'
                        cabextract ./"$n"
                    case '*.cpio'
                        cpio -id < ./"$n"
                    case '*.cba' '*.ace'
                        unace x ./"$n"
                    case '*'
                        echo "ex: '$n' - unknown archive method"
                        return 1
                end
            else
                echo "'$n' - file does not exist"
                return 1
            end
        end
    end
end
#+end_src

* Aliases
This section describes different aliases

Shell aliases allow you to take a command, and make it shorter

** General Aliases
This area describes general aliases

|-----------------------------------------------|
| Aliases                                       |
|-----------------------------------------------|
| neofetch (does neowofetch, upodated neofetch) |
| sudo (does doas, less bloated sudo)           |
| icat (uses icat image viewer kitten)          |
| rr (does the terminal rickroll)               |
| ls (uses exa instead)                         |
| egrep (grep -E for muscle memory)             |
| fgrep (grep -F for muscle memory)             |
| [1-9], (cd's to respective parent directory)  |
| c~ (cd's to home directory)                   |
| c- (cd's to previous directory)               |
|-----------------------------------------------|

#+begin_src fish
# Neofetch to Neowofetch
alias neofetch="neowofetch"

# Sudo to Doas
alias sudo="doas"

# Doas
alias doas="doas --"

# Icat
alias icat="kitten icat"

# The Terminal Rickroll
alias rr="curl -s -L https://raw.githubusercontent.com/keroserene/rickrollrc/master/roll.sh | bash"

# ls to exa
alias ls="eza -al --color=always --group-directories-first --icons" # my preferred listing
alias la="eza -a --color=always --group-directories-first --icons"  # all files and dirs
alias ll="eza -l --color=always --group-directories-first --icons"  # long format
alias lt="eza -aT --color=always --group-directories-first --icons" # tree listing
alias l1="eza -al --color=always --group-directories-first --icons ../" # ls on the PARENT directory
alias l2="eza -al --color=always --group-directories-first --icons ../../" # ls on directory 2 levels up
alias l3="eza -al --color=always --group-directories-first --icons ../../../" # ls on directory 3 levels up
alias l4="eza -al --color=always --group-directories-first --icons ../../../../" # ls on directory 4 levels up
alias l5="eza -al --color=always --group-directories-first --icons ../../../../../" # ls on directory 5 levels up
alias l6="eza -al --color=always --group-directories-first --icons ../../../../../../" # ls on directory 6 levels up
alias l7="eza -al --color=always --group-directories-first --icons ../../../../../../../" # ls on directory 7 levels up
alias l8="eza -al --color=always --group-directories-first --icons ../../../../../../../../" # ls on directory 8 levels up
alias l9="eza -al --color=always --group-directories-first --icons ../../../../../../../../../" # ls on directory 9 levels up

# E and F grep aliases
alias egrep="grep -E"
alias fgrep="grep -F"

# Parent Directory alias
alias 1.="cd .."
alias 2.="cd ../.."
alias 3.="cd ../../.."
alias 4.="cd ../../../.."
alias 5.="cd ../../../../.."
alias 6.="cd ../../../../../.."
alias 7.="cd ../../../../../../.."
alias 8.="cd ../../../../../../../.."
alias 9.="cd ../../../../../../../../.."

# Home Folder alias
alias c~="cd ~"

# Previous Directory
alias c-="cd -"

#+end_src

** Pacman
These aliases are for the pacman package manager

|-----------------------------------------------------------------------------------|
| Aliases                                                                           |
|-----------------------------------------------------------------------------------|
| pacsyu (Syncronizes repos, Updates installed packages, and installs packages)     |
| pacs (Installs Packages)                                                          |
| pacsy (Syncronizes repos, and Installs Packages)                                  |
| pacrem (Removes a package)                                                        |
| pacrems (Removes a package and removed dependencies not needed by other programs) |
| pacun (Unlocks the package list)                                                  |
|-----------------------------------------------------------------------------------|

#+begin_src fish
alias pacsyu="doas pacman -Syyu"
alias pacs="doas pacman -S"
alias pacsy="doas pacman -Syy"
alias pacrem="doas pacman -R"
alias pacrems="doas pacman -Rs"
alias pacun="doas rm /var/lib/pacman/db.lck"
#+end_src

** Aur Helpers
These aliases are for AUR Helper Scripts

|-----------------------------------------------------------|
| Aliases                                                   |
|-----------------------------------------------------------|
| parusyu (Updates, Syncronizes, and installs AUR Packages) |
| parus (Installs AUR Package)                              |
| yays (Installs AUR Package)                               |
| yaysyu (Syncronizes, Updates, and Installs AUR Packages)  |
|-----------------------------------------------------------|

#+begin_src fish
alias parusyu="paru -Sua --noconfirm"
alias parus="paru -S"
alias yays="yay -S"
alias yaysyu="yay -Syu"
#+end_src

** Text Editors
This section defines Aliases for Text Editors

|---------------------------------------|
| Aliases                               |
|---------------------------------------|
| vi (opens neovim)                     |
| vim (opens neovim)                    |
| em (opens terminal version of emacs)  |
|---------------------------------------|

#+begin_src fish
alias vi="nvim"
alias vim="nvim"

alias em="emacs -nw"
#+end_src

** Code/Rust
This section is for coding aliases for either general or rust dev

|-------------------------------------|
| General Aliases                     |
|-------------------------------------|
| rs (cd's to Rust Project Directory) |
| co (cd's to Code Directory)         |
|-------------------------------------|

|--------------------------------------------|
| Rust Compiler                              |
|--------------------------------------------|
| rbr (builds a binary with release flag)    |
| rbd (builds a debug binary)                |
| rcr (builds and automatically runs binary) |
| rpr (cd's to release directory)            |
| rpd (cd's to debug directory)              |
|--------------------------------------------|

#+begin_src fish
alias rs="cd ~/Documents/Code/Rust"
alias co="cd ~/Documents/Code"

alias rbr="cargo build --release"
alias rbd="cargo build"
alias rcr="cargo run"
alias rpr="cd target/release"
alias rpd="cd target/debug"
#+end_src

* Colorscript
Runs a random shell-color-script

These are basically ASCII Art

#+begin_src fish
colorscript -r
#+end_src

* Prompt
Uses the Starship prompt

Starship is a cross-shell prompt meaning you can use the same prompt in say BASH for instance

#+begin_src fish
starship init fish | source
#+end_src
